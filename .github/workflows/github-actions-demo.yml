# name: ci-demo
# on:
#   push:
#     branches:
#       - 'feature/ci-integration'
#     tags:
#       - 'v[0-9]+.[0-9]+.[0-9]+'
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         uses: actions/checkout@v3
#       -
#         name: Setting up jq
#         run: sudo apt-get install jq
#       -
#         name: Build the docker-compose stack
#         run: docker-compose -f docker/demo/docker-compose.ci.yml up -d
#       -
#         name: Checking running containers
#         run: docker ps -a
#       -
#         name: Check logs
#         run: docker logs app-container
#       -
#         name: Check db logs
#         run: docker logs db-container
#       -
#         name: Run a curl test on app
#         # run: curl http://localhost:8080/api/products?sort=
#         run: curl http://localhost:8080/
#       -
#         name: Checking running containers
#         run: docker ps -a

name: ci-demo2
on: 
  push:
    branches:
      - 'feature/ci-integration'
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Build Image
        run: docker compose -f docker/demo/docker-compose.ci.yml up -d

      - name: Wait for service to become available
        run: sleep 30s

      - name: Get available containers
        run: docker ps -a

      - name: Logs for app
        run: docker logs app-container

      - name: Logs for db
        run: docker logs db-container

      - name: Run a curl test on app
        run: curl http://localhost:8080/

  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/demo/docker-compose.ci.yml
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/c5-grenier:latest

# name: ci-demo

# on:
#   push:
#     branches:
#       - 'ci-integration'

# jobs:
#   docker:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         name: Set up QEMU
#         uses: docker/setup-qemu-action@v2
#       -
#         name: Set up docker Buildx
#         uses: docker/setup-buildx-action@v2
#       -
#         name: Login to docker hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       -
#         name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: ./
#           push: true
#           tags: user/app:latest

# run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
# on: [push]
# jobs:
#   Explore-GitHub-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - name: Check out repository code
#         uses: actions/checkout@v3
#       - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
#       - name: List files in the repository
#         run: |
#           ls ${{ github.workspace }}
#       - run: echo "üçè This job's status is ${{ job.status }}."