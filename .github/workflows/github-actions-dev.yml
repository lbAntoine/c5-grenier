name: ci-dev
on: 
  push:
    branches:
      - 'feature/ci-integration'
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Build Image
        run: docker-compose -f docker/demo/docker-compose.ci.yml up -d

      - name: Wait for service to become available
        run: sleep 10s

      - name: Get available containers
        run: docker ps -a

      - name: Logs for app
        run: docker logs app-container

      - name: Logs for db
        run: docker logs db-container

      - name: Wait for service to become available 2
        run: sleep 30s

      - name: Run a curl test on app
        run: curl http://localhost:8080/api/cities?query

      - name: Stop and remove containers
        run: docker-compose -f docker/demo/docker-compose.ci.yml down

      # - name: Export Docker images
      #   run: |
      #     docker save -o docker/demo/demo_web.tar app
      #     docker save -o docker/demo/demo_db.tar db

      # - name: Upload Docker images
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: docker-images
      #     path: |
      #       docker/demo/demo_web.tar
      #       docker/demo/demo_db.tar
      
      # - name: Trigger deploy workflow
      #   uses: peter-evans/repository-dispatch@v1
      #   with:
      #     token: ${{ secrets.PAT }}
      #     repository: ${{ github.repository }}
      #     event-type: deploy
          # client-payload: '{"ref": "${{ github.ref }}"}'
  
  deploy:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RPI_HOST }}
          username: ${{ secrets.RPI_USERNAME }}
          key: ${{ secrets.RPI_KEY }}
          port: ${{ secrets.RPI_PORT }}
          script: |
            # docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            # Execute the script on the remote server
            echo ${{ secrets.SUDO }} | sudo -S /home/lbantoine/code/c5-grenier/docker/prod/deploy.sh